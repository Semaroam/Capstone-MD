// Generated by view binder compiler. Do not edit!
package com.dicoding.semaroam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.semaroam.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.search.SearchBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialCardView card;

  @NonNull
  public final ImageButton etProfile;

  @NonNull
  public final ImageView eventImage;

  @NonNull
  public final TextView eventLocation;

  @NonNull
  public final TextView eventName;

  @NonNull
  public final TextView eventTime;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final SearchBar searchBar;

  @NonNull
  public final TextView tvHiUser;

  private ActivityHomeBinding(@NonNull RelativeLayout rootView, @NonNull MaterialCardView card,
      @NonNull ImageButton etProfile, @NonNull ImageView eventImage,
      @NonNull TextView eventLocation, @NonNull TextView eventName, @NonNull TextView eventTime,
      @NonNull RelativeLayout main, @NonNull SearchBar searchBar, @NonNull TextView tvHiUser) {
    this.rootView = rootView;
    this.card = card;
    this.etProfile = etProfile;
    this.eventImage = eventImage;
    this.eventLocation = eventLocation;
    this.eventName = eventName;
    this.eventTime = eventTime;
    this.main = main;
    this.searchBar = searchBar;
    this.tvHiUser = tvHiUser;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card;
      MaterialCardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.et_profile;
      ImageButton etProfile = ViewBindings.findChildViewById(rootView, id);
      if (etProfile == null) {
        break missingId;
      }

      id = R.id.event_image;
      ImageView eventImage = ViewBindings.findChildViewById(rootView, id);
      if (eventImage == null) {
        break missingId;
      }

      id = R.id.event_location;
      TextView eventLocation = ViewBindings.findChildViewById(rootView, id);
      if (eventLocation == null) {
        break missingId;
      }

      id = R.id.event_name;
      TextView eventName = ViewBindings.findChildViewById(rootView, id);
      if (eventName == null) {
        break missingId;
      }

      id = R.id.event_time;
      TextView eventTime = ViewBindings.findChildViewById(rootView, id);
      if (eventTime == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.search_bar;
      SearchBar searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.tv_hi_user;
      TextView tvHiUser = ViewBindings.findChildViewById(rootView, id);
      if (tvHiUser == null) {
        break missingId;
      }

      return new ActivityHomeBinding((RelativeLayout) rootView, card, etProfile, eventImage,
          eventLocation, eventName, eventTime, main, searchBar, tvHiUser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
